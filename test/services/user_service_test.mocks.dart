// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_mockito/test/services/user_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i2;
import 'package:flutter_mockito/contracts/http_service_contract.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T1> extends _i1.SmartFake implements _i2.Response<T1> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HttpServiceContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpServiceContract extends _i1.Mock
    implements _i3.HttpServiceContract {
  @override
  _i4.Future<_i2.Response<T>> request<T>(
    String? url, {
    required String? method,
    Map<String, dynamic>? queryString,
    Object? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #method: method,
            #queryString: queryString,
            #data: data,
          },
        ),
        returnValue: _i4.Future<_i2.Response<T>>.value(_FakeResponse_0<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #method: method,
              #queryString: queryString,
              #data: data,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<T>>.value(_FakeResponse_0<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #method: method,
              #queryString: queryString,
              #data: data,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<T>>);
}
